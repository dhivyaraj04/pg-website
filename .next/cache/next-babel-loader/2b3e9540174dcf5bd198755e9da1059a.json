{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Modal from \"react-modal\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { FixedSizeList as List } from \"react-window\";\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\nimport { Container } from \"styled-container-component\";\nimport { Column, Row } from \"styled-grid-system-component\";\nimport { Banner } from \"./banner/banner\";\nimport { Question } from \"./question/question\";\nimport { QuestionAnswer } from \"./question/question-answer\";\nimport { homeBanner } from \"./data\";\nimport { BaseUrl } from \"../url\";\nimport { Chat } from \"./chat/chat\";\nimport { FlexTag, LoadMorebutton, Subtext, SpaceTag } from \"../components/small-component\";\nexport function ForumLayout(_ref) {\n  var queryName = _ref.queryName;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      skip = _React$useState4[0],\n      setSkip = _React$useState4[1];\n\n  var myRef = React.useRef(null);\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      scrollTop = _React$useState6[0],\n      setScrollTop = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      modalIsOpen = _React$useState8[0],\n      setIsOpen = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      array = _React$useState10[0],\n      setArray = _React$useState10[1];\n\n  var _React$useState11 = React.useState({\n    width: undefined,\n    height: undefined\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      windowSize = _React$useState12[0],\n      setWindowSize = _React$useState12[1];\n\n  var _React$useState13 = React.useState([]),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      selected1 = _React$useState14[0],\n      setSelected1 = _React$useState14[1];\n\n  var _React$useState15 = React.useState([]),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      selected2 = _React$useState16[0],\n      setSelected2 = _React$useState16[1];\n\n  var _React$useState17 = React.useState([]),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      option1 = _React$useState18[0],\n      setOption1 = _React$useState18[1];\n\n  var _React$useState19 = React.useState([]),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      option2 = _React$useState20[0],\n      setOption2 = _React$useState20[1];\n\n  React.useEffect(function () {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  React.useEffect(function () {\n    getForumQuery(queryName);\n  }, []);\n\n  function getForumQuery(queryName) {\n    fetch(\"\".concat(BaseUrl, \"/apiV2/forumQueries\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        expertiseId: \"\",\n        limit: 500,\n        skip: skip\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log(res.queries);\n      var t = query.concat(res.queries);\n      setQuery(t);\n      var arr1 = [];\n      var arr2 = []; // eslint-disable-next-line\n\n      res.queries.map(function (res) {\n        arr1 = arr1.concat({\n          label: res.expertise,\n          value: res.expertise\n        });\n        arr2 = arr2.concat({\n          label: res.subExpertise,\n          value: res.subExpertise\n        });\n      });\n      setOption1(uniquebyKeep(arr1));\n      setOption2(uniquebyKeep(arr2));\n    });\n  }\n\n  function test(value) {\n    var result = [];\n    var arr2 = [];\n    value.map(function (a1) {\n      var out = query.filter(function (item) {\n        return item.expertise === a1.value;\n      });\n      result.push.apply(result, _toConsumableArray(out));\n    });\n    result.map(function (res) {\n      arr2 = arr2.concat({\n        label: res.subExpertise,\n        value: res.subExpertise\n      });\n    });\n    setSelected2(uniquebyKeep(arr2));\n    setOption2(uniquebyKeep(arr2)); // setOption2(uniquebyKeep(arr2));\n  }\n\n  function searchData() {\n    var result = [];\n    var result2 = [];\n    var ar = [];\n    ar = selected1.concat(selected2);\n    console.log(ar, \"ar\");\n    ar.map(function (a1) {\n      var out = query.filter(function (item) {\n        return item.expertise === a1.value && item.subExpertise === a1.value;\n      });\n      result.push.apply(result, _toConsumableArray(out));\n    });\n    selected2.map(function (a1) {\n      var out = query.filter(function (item) {\n        return item.subExpertise === a1.value;\n      });\n      result2.push.apply(result2, _toConsumableArray(out));\n    });\n    console.log(result, \"result\");\n    var te = result.concat(result2);\n    var isDuplicate = te.filter(function (ele, ind) {\n      return ind === te.findIndex(function (elem) {\n        return elem._id === ele._id;\n      });\n    });\n  }\n\n  function uniquebyKeep(data) {\n    var isDuplicate = data.filter(function (ele, ind) {\n      return ind === data.findIndex(function (elem) {\n        return elem.label === ele.label && elem.value === ele.value;\n      });\n    });\n    return isDuplicate;\n  }\n\n  function onScroll() {\n    setSkip(skip + 1);\n    var scrollY = window.scrollY;\n    var scrollTops = myRef.current.scrollTop;\n    setScrollTop(scrollTops);\n    getForumQuery(queryName);\n  }\n\n  function openModal(test) {\n    var bigCities = query.filter(function (city) {\n      return city._id === test;\n    });\n    setArray(bigCities);\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  var Rows = function Rows(_ref2) {\n    var index = _ref2.index,\n        style = _ref2.style;\n    return __jsx(\"div\", {\n      style: style\n    }, __jsx(Question, {\n      QuestionItems: query[index],\n      windowwidth: windowSize.width,\n      onClickEvent: openModal\n    }));\n  };\n\n  var customStyles = {\n    overlay: {\n      backgroundColor: \"#2125293b\"\n    },\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"80%\",\n      overflow: \"initial\",\n      height: array.length !== 0 ? array[0].answers ? array[0].answers.length > 1 ? \"400px\" : \"375px\" : \"375px\" : \"375px\"\n    }\n  };\n\n  var _React$useState21 = React.useState([]),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      selectedOptions = _React$useState22[0],\n      setSelectedOptions = _React$useState22[1];\n\n  React.useEffect(function () {\n    setSelected2([{\n      label: \"All\",\n      value: \"*\"\n    }].concat(_toConsumableArray(option2)));\n    setSelected1([{\n      label: \"All\",\n      value: \"*\"\n    }].concat(_toConsumableArray(option1)));\n  }, []);\n\n  function getDropdownButtonLabelExpertise(_ref3) {\n    var placeholderButtonLabel = _ref3.placeholderButtonLabel,\n        value = _ref3.value;\n    console.log(value, \"value\");\n\n    if (value && value.some(function (o) {\n      return o.value === \"*\";\n    })) {\n      return \"\".concat(placeholderButtonLabel, \": All\");\n    } else {\n      return \"\".concat(placeholderButtonLabel, \": \\n\\t\\t  \").concat(JSON.stringify(value.label), \" selected\");\n    }\n  }\n\n  function onChangeExpertise(value, event) {\n    setOption2([]);\n    setSelected2([]);\n    console.log(value);\n    test(value);\n\n    if (event.action === \"select-option\" && event.option.value === \"*\") {\n      this.setState(this.options);\n    } else if (event.action === \"deselect-option\" && event.option.value === \"*\") {\n      this.setState([]);\n    } else if (event.action === \"deselect-option\") {\n      this.setState(value.filter(function (o) {\n        return o.value !== \"*\";\n      }));\n    } else if (value.length === this.options.length - 1) {\n      this.setState(this.options);\n    } else {\n      this.setState(value);\n    }\n  }\n\n  function getDropdownButtonLabelSubExpertise(_ref4) {\n    var placeholderButtonLabel = _ref4.placeholderButtonLabel,\n        value = _ref4.value;\n\n    if (value && value.some(function (o) {\n      return o.value === \"*\";\n    })) {\n      return \"\".concat(placeholderButtonLabel, \": All\");\n    } else {\n      return \"\".concat(placeholderButtonLabel, \": \\n\\t\\t  \").concat(JSON.stringify(value.label), \" selected\");\n    }\n  }\n\n  function onChangeSubExpertise(value, event) {\n    if (event.action === \"select-option\" && event.option.value === \"*\") {\n      this.setState(this.options);\n    } else if (event.action === \"deselect-option\" && event.option.value === \"*\") {\n      this.setState([]);\n    } else if (event.action === \"deselect-option\") {\n      this.setState(value.filter(function (o) {\n        return o.value !== \"*\";\n      }));\n    } else if (value.length === this.options.length - 1) {\n      this.setState(this.options);\n    } else {\n      this.setState(value);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Banner, {\n    BanerItems: homeBanner\n  }), __jsx(Container, null, __jsx(\"div\", {\n    style: {\n      border: \"1px solid #D0D7DC\"\n    }\n  }, __jsx(SpaceTag, {\n    marginTop: \"20\",\n    marginBottom: \"20\"\n  }, __jsx(Row, null, __jsx(Column, {\n    md: 4,\n    sm: 4,\n    xs: 12\n  }, __jsx(\"div\", null, __jsx(ReactMultiSelectCheckboxes, {\n    options: [{\n      label1: \"All\",\n      value: \"*\"\n    }].concat(_toConsumableArray(option1)),\n    placeholderButtonLabel: \"Expertise\",\n    getDropdownButtonLabel: getDropdownButtonLabelExpertise,\n    value: selected1,\n    onChange: onChangeExpertise,\n    setState: setSelected1\n  }))), __jsx(Column, {\n    md: 4,\n    sm: 4,\n    xs: 12\n  }, __jsx(\"div\", null, __jsx(ReactMultiSelectCheckboxes, {\n    options: [{\n      label2: \"All\",\n      value: \"*\"\n    }].concat(_toConsumableArray(option2)),\n    placeholderButtonLabel: \"SubExpertise\",\n    getDropdownButtonLabel: getDropdownButtonLabelSubExpertise,\n    value: selected2,\n    onChange: onChangeSubExpertise,\n    setState: setSelected2\n  }))), __jsx(Column, {\n    md: 4,\n    sm: 4,\n    xs: 4\n  }, __jsx(LoadMorebutton, {\n    onClick: searchData,\n    fontSize: \"18px\",\n    padding: \"8px\",\n    background: \"#009846\",\n    color: \"#fff\",\n    width: \"125px\",\n    border: \"none\"\n  }, \"Ask a Query\"))))), __jsx(\"br\", null)), __jsx(Container, null, __jsx(Row, null, __jsx(Column, {\n    md: 12,\n    sm: 12,\n    xs: 12\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\",\n      scrollBehavior: \"smooth\"\n    }\n  }, __jsx(AutoSizer, null, function (_ref5) {\n    var height = _ref5.height,\n        width = _ref5.width;\n    return __jsx(List, {\n      height: height,\n      itemCount: query.length,\n      itemSize: 200,\n      width: width,\n      useIsScrolling: true\n    }, query ? Rows : \"loadding\");\n  }))))), __jsx(Chat, null), __jsx(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\"\n  }, __jsx(SpaceTag, null, __jsx(FlexTag, {\n    justifyContent: \"space-between\"\n  }, __jsx(SpaceTag, {\n    marginLeft: \"30\"\n  }, __jsx(Subtext, {\n    fontSize: \"28px\",\n    lineHeight: \"42px\",\n    color: \"#000\"\n  }, \"Query\")), __jsx(LoadMorebutton, {\n    onClick: closeModal,\n    fontSize: \"18px\",\n    padding: \"5px\",\n    background: \"none\",\n    color: \"#000\",\n    width: \"125px\",\n    border: \"none\"\n  }, \"X\")), __jsx(\"div\", {\n    style: {\n      height: \"300px\",\n      overflow: \"auto\"\n    }\n  }, array.map(function (list, i) {\n    return __jsx(QuestionAnswer, {\n      QuestionItems: list\n    });\n  })), __jsx(FlexTag, {\n    justifyContent: \"flex-end\"\n  }, __jsx(LoadMorebutton, {\n    onClick: closeModal,\n    fontSize: \"18px\",\n    padding: \"5px\",\n    background: \"#009846\",\n    color: \"#fff\",\n    width: \"125px\",\n    border: \"none\"\n  }, \"Close\")))));\n}","map":null,"metadata":{},"sourceType":"module"}