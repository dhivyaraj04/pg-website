{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Container } from \"styled-container-component\";\nimport { Column, Row } from \"styled-grid-system-component\";\nimport { BaseUrl } from \"../url\";\nimport { Chat } from \"./chat/chat\";\nimport { SpaceTag } from \"../components/small-component\";\nexport function ForumQuery({\n  queryId\n}) {\n  const [query, setQuery] = React.useState([]);\n  const [windowSize, setWindowSize] = React.useState({\n    width: undefined,\n    height: undefined\n  });\n  React.useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  React.useEffect(() => {\n    getForumQuery(queryId);\n  }, []);\n\n  function getForumQuery(queryName) {\n    fetch(`${BaseUrl}/apiV2/forumQueries`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        expertiseId: \"\",\n        limit: 500,\n        skip: 0\n      })\n    }).then(response => {\n      return response.json();\n    }).then(res => {\n      const t = query.concat(res.queries);\n      setQuery(t);\n      let arr1 = [];\n      let arr2 = []; // eslint-disable-next-line\n\n      res.queries.map(res => {\n        arr1 = arr1.concat({\n          label: res.expertise,\n          value: res.expertise\n        });\n        arr2 = arr2.concat({\n          label: res.subExpertise,\n          value: res.subExpertise\n        });\n      });\n    });\n  }\n\n  const height = windowSize.width > 770 ? \"120px \" : \"200px\";\n  return __jsx(React.Fragment, null, __jsx(Container, null, __jsx(Row, null, __jsx(Column, {\n    md: 12,\n    sm: 12,\n    xs: 12\n  }, \"test\")), __jsx(SpaceTag, {\n    marginTop: \"20\",\n    marginBottom: \"20\"\n  })), __jsx(Chat, null));\n}","map":null,"metadata":{},"sourceType":"module"}