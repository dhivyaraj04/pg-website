{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Modal from \"react-modal\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { Container } from \"styled-container-component\";\nimport { Column, Row } from \"styled-grid-system-component\";\nimport { Banner } from \"./banner/banner\";\nimport { Question } from \"./question/question\";\nimport { homeBanner } from \"./data\";\nimport { BaseUrl } from \"../url\";\nimport { Chat } from \"./chat/chat\";\nexport function ForumLayout({\n  queryName\n}) {\n  const [query, setQuery] = React.useState([]);\n  const [limt, setLimit] = React.useState(10);\n  const [skip, setSkip] = React.useState(0);\n  const myRef = React.useRef(null);\n  const [scrollTop, setScrollTop] = React.useState(0);\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [array, setArray] = React.useState([]);\n  React.useEffect(() => {\n    getForumQuery(queryName);\n  }, []);\n\n  function getForumQuery(queryName) {\n    fetch(`${BaseUrl}/apiV2/forumQueries`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        expertiseId: \"\",\n        limit: 30,\n        skip: skip\n      })\n    }).then(response => {\n      return response.json();\n    }).then(res => {\n      const t = query.concat(res.queries);\n      setQuery(t);\n    });\n  }\n\n  function onScroll() {\n    setSkip(skip + 1);\n    const scrollY = window.scrollY; //Don't get confused by what's scrolling - It's not the window\n\n    const scrollTops = myRef.current.scrollTop;\n    setScrollTop(scrollTops);\n    getForumQuery(queryName);\n  }\n\n  function openModal(test) {\n    console.log(test);\n    let bigCities = query.filter(city => city._id === test);\n    setArray(bigCities);\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const Rows = ({\n    index,\n    style\n  }) => __jsx(\"div\", {\n    style: style\n  }, __jsx(Question, {\n    QuestionItems: query[index],\n    arrays: query,\n    onClickEvent: openModal\n  }));\n\n  const customStyles = {\n    overlay: {\n      backgroundColor: \"#2125293b\"\n    },\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"80%\"\n    }\n  };\n  return __jsx(React.Fragment, null, __jsx(Banner, {\n    BanerItems: homeBanner\n  }), __jsx(Container, null, __jsx(Row, null, __jsx(Column, {\n    md: 12,\n    sm: 12,\n    xs: 12\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\",\n      overflow: \"auto\"\n    },\n    ref: myRef,\n    onScroll: onScroll\n  }, __jsx(AutoSizer, null, ({\n    height,\n    width\n  }) => __jsx(List, {\n    height: height,\n    itemCount: query.length,\n    itemSize: 220,\n    width: width,\n    useIsScrolling: true\n  }, query ? Rows : \"loadding\")))))), __jsx(Chat, null), __jsx(Modal, {\n    isOpen: modalIsOpen,\n    style: customStyles,\n    contentLabel: \"Example Modal\"\n  }, array.map((list, i) => __jsx(Question, {\n    QuestionItems: list\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}