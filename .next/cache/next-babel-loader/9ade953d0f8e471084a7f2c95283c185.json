{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { VariableSizeList as List } from \"react-window\";\nimport { SpaceTag } from \"../../components/small-component\";\nimport { Dat, Year, Month, Minutes, Hour } from \"../../components/date-time\";\nexport function Question(_ref) {\n  var QuestionItems = _ref.QuestionItems;\n\n  var _React$useState = React.useState({\n    id: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      heights = _React$useState4[0],\n      setHeight = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modalIsOpen = _React$useState6[0],\n      setIsOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      array = _React$useState8[0],\n      setArray = _React$useState8[1];\n\n  function getForumQuery(queryId) {\n    setOpen({\n      id: queryId\n    }); // setHeight(parseInt(e.target.id));\n    // getItemSize(e.target.id);\n    // console.log(e.target.parentNode.id);\n    // document.getElementById(e.target.parentNode.id).style.height = \"auto\";\n\n    setIsOpen(true);\n    var bigCities = QuestionItems.filter(function (city) {\n      return city._id === queryId;\n    });\n    setArray(bigCities);\n    alert(\"hi\");\n  }\n\n  function getDate(timestamp) {\n    var DateMonthYear = Dat(timestamp) + \" \" + Month(timestamp) + \" \" + Year(timestamp);\n    return DateMonthYear;\n  }\n\n  function getHoursMinutes(timestamp) {\n    var suffix = Hour(timestamp) >= 12 ? \"PM\" : \"AM\";\n    var HoursMinutes = Hour(timestamp) + \":\" + Minutes(timestamp) + \" \" + suffix;\n    return HoursMinutes;\n  }\n\n  function getArrayCount(array) {\n    var length = array.length;\n    return length + \" \" + \"Answers\";\n  }\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function afterOpenModal() {// references are now sync'd and can be accessed.\n    // subtitle.style.color = \"#f00\";\n  }\n\n  var customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\"\n    }\n  };\n\n  var Rows = function Rows(_ref2) {\n    var index = _ref2.index,\n        isScrolling = _ref2.isScrolling,\n        style = _ref2.style;\n    return __jsx(\"div\", {\n      style: style\n    }, isScrolling ? __jsx(\"div\", null, \"Loading ...\") : __jsx(React.Fragment, null, QuestionItems[index].expertise));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(SpaceTag, {\n    marginTop: \"20\",\n    marginBottom: \"50\"\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, __jsx(AutoSizer, null, function (_ref3) {\n    var height = _ref3.height,\n        width = _ref3.width;\n    return __jsx(List, {\n      height: height,\n      itemCount: QuestionItems.length,\n      itemSize: 200,\n      width: width,\n      useIsScrolling: true\n    }, Rows);\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}