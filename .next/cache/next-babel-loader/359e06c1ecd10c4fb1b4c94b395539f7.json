{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document from \"next/document\";\nimport { ServerStyleSheet } from \"styled-components\";\n\nclass MyDocument extends Document {\n  static async getInitialProps({\n    renderPage\n  }) {\n    const sheet = new ServerStyleSheet();\n\n    function handleCollectStyles(App) {\n      return props => {\n        return sheet.collectStyles(__jsx(App, props));\n      };\n    }\n\n    const page = renderPage(App => handleCollectStyles(App));\n    const styleTags = sheet.getStyleElement();\n    return _objectSpread(_objectSpread({}, page), {}, {\n      styleTags\n    });\n  } // render() {\n  // \treturn (\n  // \t\t<Html lang=\"en\">\n  // \t\t\t<Head />\n  // \t\t\t<body>\n  // \t\t\t\t<Main />\n  // \t\t\t\t<NextScript />\n  // \t\t\t</body>\n  // \t\t</Html>\n  // \t);\n  // }\n\n\n}\n\nexport default MyDocument;","map":null,"metadata":{},"sourceType":"module"}