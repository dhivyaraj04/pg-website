{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Chat } from \"./chat/chat\";\nimport { Banner } from \"./banner/banner\";\nimport { Choose } from \"./consultant/choose\";\nimport { Work } from \"./consultant/work\";\nimport { ScrollIcon } from \"./consultant/scroll-icon\";\nimport { aboutBanner, ChooseItem, WorkItem } from \"./data\";\nimport { BaseUrl } from \"../url\";\nexport function Consultant() {\n  var _React$useState = React.useState({\n    width: undefined,\n    height: undefined\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      windowSize = _React$useState2[0],\n      setWindowSize = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      expertise = _React$useState4[0],\n      setExpertise = _React$useState4[1];\n\n  React.useEffect(function () {\n    getExpertis(\"expertises\");\n\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  var width = 770;\n\n  function getExpertis(_x) {\n    return _getExpertis.apply(this, arguments);\n  }\n\n  function _getExpertis() {\n    _getExpertis = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(expertises) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(BaseUrl, \"/apiV2/\").concat(expertises), {\n                method: \"GET\"\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              setExpertise(data.expertises);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getExpertis.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Banner, {\n    BanerItems: aboutBanner\n  }), __jsx(Choose, {\n    ChoseItems: ChooseItem\n  }), __jsx(\"br\", null), __jsx(ScrollIcon, {\n    WorkItems: expertise\n  }), __jsx(Work, {\n    WorkItems: WorkItem\n  }), __jsx(Chat, null));\n}","map":null,"metadata":{},"sourceType":"module"}