{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { List, AutoSizer, CellMeasurer, CellMeasurerCache } from \"react-virtualized\";\nimport { Container } from \"styled-container-component\";\nimport { Column, Row } from \"styled-grid-system-component\";\nimport { Banner } from \"./banner/banner\";\nimport { Question } from \"./question/question\";\nimport { homeBanner } from \"./data\";\nimport { BaseUrl } from \"../url\";\nimport { Chat } from \"./chat/chat\";\nexport function ForumLayout(_ref) {\n  var queryName = _ref.queryName;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      scrollY = _React$useState4[0],\n      setScrollY = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    width: undefined,\n    height: undefined\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      windowSize = _React$useState6[0],\n      setWindowSize = _React$useState6[1];\n\n  React.useEffect(function () {\n    getForumQuery(queryName);\n\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  var width = 770;\n\n  function getForumQuery(queryName) {\n    fetch(\"\".concat(BaseUrl, \"/apiV2/forumQueries\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        expertiseId: \"\",\n        limit: 100,\n        skip: 0\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setQuery(res.queries);\n    });\n  }\n\n  function logit() {\n    setScrollY(scrollY + 1);\n    getForumQuery(queryName);\n  } // React.useEffect(() => {\n  // \tfunction watchScroll() {\n  // \t\twindow.addEventListener(\"scroll\", logit);\n  // \t}\n  // \twatchScroll();\n  // \treturn () => {\n  // \t\twindow.removeEventListener(\"scroll\", logit);\n  // \t};\n  // });\n\n\n  var cache = React.useRef(new CellMeasurerCache({\n    fixedWidth: true,\n    defaultHeight: 100\n  }));\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      people = _React$useState8[0],\n      setPeople = _React$useState8[1];\n\n  var _React$useState9 = React.useState(new Date()),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      time = _React$useState10[0],\n      setTime = _React$useState10[1];\n\n  React.useEffect(function () {\n    var interval = setInterval(function () {\n      setTime(new Date());\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  console.log(query.length, \"50\");\n  return __jsx(React.Fragment, null, __jsx(Banner, {\n    BanerItems: homeBanner\n  }), __jsx(Container, null, __jsx(Row, null, __jsx(Column, {\n    md: 12,\n    sm: 12,\n    xs: 12\n  }, __jsx(\"h1\", null, time.toISOString()), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, __jsx(AutoSizer, null, function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return __jsx(List, {\n      width: width,\n      height: height,\n      rowHeight: cache.current.rowHeight,\n      deferredMeasurementCache: cache.current,\n      rowCount: query.length,\n      rowRenderer: function rowRenderer(_ref3) {\n        var key = _ref3.key,\n            index = _ref3.index,\n            style = _ref3.style,\n            parent = _ref3.parent;\n        return __jsx(CellMeasurer, {\n          key: key,\n          cache: cache.current,\n          parent: parent,\n          columnIndex: 0,\n          rowIndex: index\n        }, __jsx(\"div\", {\n          style: style\n        }, __jsx(Question, {\n          QuestionItems: query\n        })));\n      }\n    });\n  }))))), __jsx(Chat, null));\n}","map":null,"metadata":{},"sourceType":"module"}